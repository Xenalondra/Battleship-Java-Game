/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.IOException;
import java.util.Random;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/**
 *
 * @author genes
 */
public class UI extends javax.swing.JFrame {;
    public UI() {
        initComponents();
        jTextArea1.append("Good Day, Soldier! "
                + "\nAre you ready for some action? "
                + "\nLet's start by launching your first ever missile."
                + "\n(click the missile!)");
        {

        
    }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(159, 203, 203));

        jTextArea1.setBackground(new java.awt.Color(224, 224, 243));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/2529c62e987d4b7c11553ea92c3cc66e--space-pics-about-space.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea.setBackground(new java.awt.Color(11, 1, 88));
        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Bookman Old Style", 1, 16)); // NOI18N
        jTextArea.setForeground(new java.awt.Color(153, 255, 255));
        jTextArea.setLineWrap(true);
        jTextArea.setRows(5);
        jTextArea.setTabSize(6);
        jTextArea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 1, true));
        jScrollPane2.setViewportView(jTextArea);

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));

        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 36)); // NOI18N
        jLabel1.setText("LAUNCH");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int[][] board = new int[7][7];
        int[][] ships = new int[5][2];
        int[] shoot = new int[2];
        int attempts = 0,
        shotHit = 0;
       
         

        //method initBoard is triggered to create the board with the number '-1' in all positions
        initBoard(board);
        //method initShips is triggered to fill the position of the 5 ships (row and column)
        initShips(ships);
        jTextArea1.setText("");
        jTextArea1.append("Guess coordinates on the grid to take a shot "
                + "\nat your enemy. "
                + "\nYou must input the row and column of the "
                + "\ndesired location to send your hellstorm missile. "
                + "\nWish you LUCK soldier!"
                + "\nMay you bring home the victory!");

        //the game begins using a do...while loop, game goes on until the player hits the 5 ships
        try {
          
            
        do {
            showBoard(board);
            shoot(shoot);
            jTextArea.setText("");
            jTextArea1.setText("");
            attempts++;

            if (hit(shoot, ships)) {
                hint(shoot, ships, attempts);
                shotHit++;
               
            } else {
                hint(shoot, ships, attempts);
                
            }

            changeboard(shoot, ships, board);
           

            //condition of the loop is "shotHit!=5'
        } while (shotHit != 5);
        
        jTextArea1.setText("\n\n\nWell done soldier! You've destroyed 5 enemy ships in " + attempts + " attempts");
         System.exit(0);
}catch (Exception e) {
                   
            }
        }

        //sets the value -1 in all blocks of the board
        public static void initBoard(int[][] board) {
            for (int row = 0; row < 7; row++) {
                for (int column = 0; column < 7; column++) {
                    board[row][column] = -1;
                }
            }
        }

        //gets the int matrix and shows the board game
        public  void showBoard(int[][] board) {
          // String rowString = "";
           jTextArea.setText(jTextArea.getText()+"\t1 \t2 \t3 \t4 \t5 \t6 \t7");
           jTextArea.setText(jTextArea.getText()+"\n");
            for (int row = 0; row <7; row++) {
            jTextArea.setText(jTextArea.getText()+" "+(row+1));
            
//                
                  for (int column = 0; column <7; column++) {
                      if (board[row][column] == -1) {
                          jTextArea.setText(jTextArea.getText()+"\t"+("~"));
//                      
                    } else if (board[row][column] == 0) {
                         jTextArea.setText(jTextArea.getText()+ "\t"+ ("*") );
//                        
                    } else if (board[row][column] == 1) {
                         jTextArea.setText(jTextArea.getText()+ "\t"+ ("X") );
//                         
                    }
 
                }
//                rowString += "\n";
//                jTextArea4.setText(rowString);
                jTextArea.setText(jTextArea.getText()+" "+"\n" );
            }
//            jTextArea4.setText(rowString);
             jTextArea.setText(jTextArea.getText()+" "+"\n");

        }

        //this method randomly select 5 pairs of integers numbers, which are the location of the 5 ships
        public static void initShips(int[][] ships) {
            Random random = new Random();

            for (int ship = 0; ship < 5; ship++) {
                ships[ship][0] = random.nextInt(7);
                ships[ship][1] = random.nextInt(7);

                //let's check if that shot was already tried
                //if it was, just finish the do...while when a new pair was randomly selected
                for (int last = 0; last < ship; last++) {
                    if ((ships[ship][0] == ships[last][0]) && (ships[ship][1] == ships[last][1])) {
                        do {
                            ships[ship][0] = random.nextInt(7);
                            ships[ship][1] = random.nextInt(7);
                        } while ((ships[ship][0] == ships[last][0]) && (ships[ship][1] == ships[last][1]));
                    }
                }

            }
        }

        //gets a shot (row and column) of the user, and stores in variable shot []
        public static void shoot(int[] shoot) {
            String q,w;
            Boolean validInput = false;
            while(!validInput){
            try{
            q=JOptionPane.showInputDialog(null, "Row: ");
            int result = Integer.parseInt(q);
            shoot[0] = result;
            shoot[0]--;
            if (result >0 && result <8){
            validInput = true;
            }
            w=JOptionPane.showInputDialog(null, "Column: ");
            int result1 = Integer.parseInt(w);
            shoot[1] = result1;
            shoot[1]--;
            if(result1 >0 && result <8 ){
            validInput = true;    
            }}catch (Exception e){
             JOptionPane.showMessageDialog(null, "You can only input 1-7 numbers only.", "ERROR", JOptionPane.ERROR_MESSAGE);   
            
             }
            }
            
            
            
        }
        //checks if given shot hit a ship
        public  boolean hit(int[] shoot, int[][] ships) {

            for (int ship = 0; ship < ships.length; ship++) {
                if (shoot[0] == ships[ship][0] && shoot[1] == ships[ship][1]) {
                    jTextArea1.append("What a SOLDIER! You hit an enemy ship located in "+ ( shoot[0] + 1) +", "+ (shoot[1] + 1) + " with a hellstorm missle\n");
                    return true;
                }
            }
            return false;
        }

        //give a hint of how many ships are in that row and that column where the shot was given
        public  void hint(int[] shoot, int[][] ships, int attempt) {
            int row = 0,
            column = 0;

            for (int line = 0; line < ships.length; line++) {
                if (ships[line][0] == shoot[0]) {
                    row++;
                }
                if (ships[line][1] == shoot[1]) {
                    column++;
                }
            }

            jTextArea1.append("\nHint "+attempt+": \nRow "+(shoot[0] + 1)+ "-> " +row +"ships\n"
                + "Column"+( shoot[1] + 1)+" -> "+ column+" ships\n");
        }

        //after the shot is given, the board is changed, showing that the shot was give (if hit or missed)
        public  void changeboard(int[] shoot, int[][] ships, int[][] board) {
            if (hit(shoot, ships)) {
                board[shoot[0]][shoot[1]] = 1;
            } else {
                board[shoot[0]][shoot[1]] = 0;
            }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
